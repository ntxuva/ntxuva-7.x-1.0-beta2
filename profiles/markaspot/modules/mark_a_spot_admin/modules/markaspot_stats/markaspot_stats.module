<?php
/**
 * @file
 * This module logs and shows logging of node (reports) actions.
 * toDo ... convert to entity-api? http://drupal.org/node/1026420 
 */

/**
 * Implements hook_permission().
 */
function markaspot_stats_permission() {
  return array(
    'view_mas_stats' => array(
      'title' => t('View Stats'),
    ),
  );
}


/**
 * Implements hook_block_info().
 */
function markaspot_stats_block_info() {
  $blocks['markaspot_stats'] = array(
    'info' => t('Mark-a-Spot: Show Stats Block'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 * http://drupal.org/node/1104498
 */
function markaspot_stats_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'markaspot_stats':
      $block['subject'] = t('Mark-a-Spot Statistics');

      if (user_access('view_mas_stats')) {

        $block['content'] = '<h3>' . t("Category") . '</h3>';
        // Get the vocabulary ID.
        $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'category'")->fetchField();
        $tax_stats = taxonomy_get_tree($vid, $parent = 0, $max_depth = 1, $load_entities = TRUE);
        $block['content'] .= theme('item_list', array(
          'items' => markaspot_stats_taxonomy($tax_stats),
        ));
        $block['content'] .= '<h3>' . t("Status") . '</h3>';
        // Get the vocabulary ID.
        $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'status'")->fetchField();
        $tax_stats = taxonomy_get_tree($vid, $parent = 0, $max_depth = 1, $load_entities = TRUE);
        $block['content'] .= theme('item_list', array(
          'items' => markaspot_stats_taxonomy($tax_stats),
        ));
/**
 * Ntxuva estatisticas de bairo
 */
        $block['content'] .= '<h3>' . t("Distrito") . '</h3>';
        // Get the vocabulary ID.
        $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'distrito_bairro'")->fetchField();
        $tax_stats = taxonomy_get_tree($vid, $parent = 0, $max_depth = 2, $load_entities = TRUE);
        $block['content'] .= theme('item_list', array(
          'items' => markaspot_stats_taxonomy($tax_stats),
        ));
      }
      break;
  }
  return $block;
}


/**
 * Gets count of nids by tid.
 *
 * @param int $tid
 *   The taxononmy id
 *
 * @return int
 *   Return count
 */
function markaspot_stats_get($tid) {

  $tids = array($tid);
  // Get all nids of $tid (turn values to int, too).
  $result = array_map('intval', taxonomy_select_nodes($tids, NULL));
  // Now match the values and count clean array keys:
  if (field_info_field('field_no_stat')) {
    return count(array_diff($result, markaspot_stats_ignore()));
  }
  else {
    return count($result);
  }
}

/**
 * Some nodes may be ignored.
 *
 * @return array
 *   Return nids
 */
function markaspot_stats_ignore() {
  $query = new EntityFieldQuery();
  $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'report')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_no_stat', 'value', 1, '=');
  $no_stat = $query->execute();

  $nids = NULL;
  if (array_key_exists('node', $no_stat)) {
    $nids = array_keys($no_stat['node']);
  }
  if (!is_array($nids)) {
    $empty_nids = array();
    return $empty_nids;
  }
  else {
    return $nids;
  }
}

/**
 * Create list items.
 *
 * @param array $tax_stats
 *   Array of Taxonomy terms
 *
 * @return array
 *   list of items.
 */
function markaspot_stats_taxonomy($tax_stats) {
  $tids = NULL;
  foreach ($tax_stats as $taxonomy_term) {
    $tids['tids'][] = array($taxonomy_term->tid, $taxonomy_term->name);
  }
  $alter['html'] = TRUE;
  $alter['max_length'] = 24;
  $alter['word_boundary'] = TRUE;
  $alter['ellipsis'] = TRUE;

  foreach ($tids['tids'] as $tid) {
    $items[] = array(
      'data' => '<span>' . views_trim_text($alter, $tid[1]) . ' : <strong>' . markaspot_stats_get($tid[0]) . ' </strong></span>',
    );
  }
  return $items;
}

/**
 * Create list items.
 *
 * @return array
 *   Return list items
 */
function markaspot_stats_users() {
  $members = db_query("SELECT count(uid) FROM {users}")->fetchField();
  // From admin_menu-module / admin_menu.module
  $interval = REQUEST_TIME - variable_get('user_block_seconds_online', 900);
  $count_anon = markaspot_session_count($interval, TRUE);
  $count_auth = markaspot_session_count($interval, FALSE);
  $users = t('All registered users:');
  $users .= $members;
  $users .= ' <br /> ';
  $users .= t('Online:');
  $users .= t('@count-anon anonymous user and @count-auth registered users', array(
    '@count-anon' => $count_anon,
    '@count-auth' => $count_auth,
  ));
  return $users;
}

/**
 * Count sessions.
 */
function markaspot_session_count($timestamp = 0, $anonymous = TRUE) {
  $query = db_select('sessions');
  $query->addExpression('COUNT(sid)', 'count');
  $query->condition('timestamp', $timestamp, '>=');
  $query->condition('uid', 0, $anonymous ? '=' : '>');
  return $query->execute()->fetchField();
}
